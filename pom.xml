<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>kdmstudy</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>kdmstudy Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <!-- 版本配置-->
      <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
      <java.version>8</java.version>
      <junit.jupiter.version>5.9.2</junit.jupiter.version>
      <maven.compiler.version>3.8.0</maven.compiler.version>
      <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
      <!-- log日志 -->
      <slf4j.version>1.7.21</slf4j.version>
      <logback.version>1.1.7</logback.version>
      <!-- allure报告 -->
      <allure.version>2.21.0</allure.version>
      <assertj.version>3.23.1</assertj.version>
      <aspectj.version>1.9.19</aspectj.version>
      <allure.maven.version>2.12.0</allure.maven.version>
      <allure.cmd.download.url>
        https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline
      </allure.cmd.download.url>
      <!-- hamcrest断言 -->
      <hamcrest.version>2.2</hamcrest.version>
      <!-- yaml对应解析 -->
      <jackson.version>2.14.2</jackson.version>
     <!-- selenium -->
     <selenium.version>3.12.0</selenium.version>
    <!-- fastjson -->
    <fastjson.version>1.2.83</fastjson.version>
 </properties>
  <dependencyManagement>
  <dependencies>
    <!--        junit5 版本管理， 找到对应依赖关系的 pom 文件，为了解决依赖冲突问题-->
    <dependency>
      <groupId>org.junit</groupId>
      <artifactId>junit-bom</artifactId>
      <version>${junit.jupiter.version}</version>
      <type>pom</type>
      <scope>import</scope>
    </dependency>
  </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- junit 相关依赖下载-->
    <!-- junit5 -->
    <dependency>
      <!-- 组织的名称；仓库中唯一标识一个项目，确保项目的唯一性 -->
      <groupId>org.junit.jupiter</groupId>
      <!-- 项目的名称或模块的名称  -->
      <artifactId>junit-jupiter</artifactId>
      <!-- 依赖的作用范围
            compile：默认的作用范围，表示在编译阶段和运行时都是可见的
            test：表示依赖只在测试阶段 src/test下可见。
            provided：表示依赖在编译阶段和测试阶段是可见的。
            runtime：表示依赖在编译阶段不可见，但在运行时可见。-->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- 用做兼容老版本 -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- hamcrest断言 -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <!--        yaml文件解析-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!-- log日志 -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- allure报告-->
    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-junit5</artifactId>
      <version>${allure.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectj.version}</version>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>


    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>

  </dependencies>
 <build>
     <plugins>
      <!-- maven 命令行执行插件-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>
            -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
          </argLine>
          <includes>
            <include>**/*Test</include>
            <include>**/Test*</include>
          </includes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
          </dependency>
          <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.jupiter.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!--maven 编译使用插件-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <parameters>true</parameters>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${maven.compiler.encoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
        <version>${allure.maven.version}</version>
        <configuration>
          <reportVersion>${allure.version}</reportVersion>
          <allureDownloadUrl>${allure.cmd.download.url}/${allure.version}/allure-commandline-${allure.version}.zip</allureDownloadUrl>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
